---
const {velocity = 1, height = '100%'} = Astro.props;
---


<div class="Video-background">

    <custom-video data-velocity={velocity}>

        <video autoplay muted loop>
            <slot name="video-sources" />
        </video>
    </custom-video>

    <div class="Video-background-content">

        <slot />
        
    </div>
</div>

<script>

    class CustomVideo extends HTMLElement {

        mobile = false;

        constructor(){
            super();

            window.matchMedia('(max-width: 767.98px)').addEventListener('change', (e) => {

                this.mobile = e.matches;

                this.#setSource();
            });

            this.mobile = window.matchMedia('(max-width: 767.98px)').matches;

            this.velocity = Number(this.getAttribute('data-velocity'));

            this.#setSource();
        }

        #setSource(){
            let source = null;

            if(this.mobile){

                source = this.querySelector('video source[data-type="mobile"]');
            }
            else {
                
                source = this.querySelector('video source[data-type="desktop"]');
            }

            const src = source.getAttribute('data-src');
            const poster = source.getAttribute('data-poster');

            this.style.setProperty('--video-background-poster', `url("${poster}")`);

            const video = this.querySelector('video');
            
            video.src = src;
            video.setAttribute('poster', poster);

            video.playbackRate = this.velocity;

            video.load();
        }
    }

    window.customElements.define('custom-video', CustomVideo);
</script>


<style
    define:vars={{
        'video-background-height': `${height}`,
    }}
>
    .Video-background {
        width: 100%;
        height: var(--video-background-height);
        display: grid;
        grid-template-columns: 1fr;
        grid-template-rows: 1fr;

        & > * {
            grid-column-start: 1;
            grid-row-start: 1;
            min-width: 0;
            min-height: 0;
        }

        custom-video {
            display: block;
            width: 100%;
            height: 100%;

            background-image: var(--video-background-poster);
            background-size: cover;
            background-position: center;

            video {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }
        }

        .Video-background-content {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 20px;
        }
    }

</style>